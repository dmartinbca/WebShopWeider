@page "/ofertas"

<div class="container-fluid px-3 px-lg-4 py-4">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex align-items-center gap-3 mb-2">
                <i class="bi bi-tag-fill text-danger fs-2"></i>
                <h1 class="mb-0 fw-bold text-dark">Promociones</h1>
            </div>
            <p class="text-muted mb-0">
                Descubre nuestras mejores ofertas en suplementación deportiva
            </p>
        </div>
    </div>

    <!-- Products Grid -->
    <div class="row">
        <div class="col-12">
            @if (offers == null)
            {
                <div class="text-center py-5">
                    <div class="spinner-border text-danger" role="status">
                        <span class="visually-hidden">Cargando promociones...</span>
                    </div>
                    <p class="mt-3 text-muted">Cargando promociones...</p>
                </div>
            }
            else if (!offers.Any())
            {
                <div class="alert alert-info d-flex align-items-center" role="alert">
                    <i class="bi bi-info-circle-fill me-2"></i>
                    <div>
                        No hay promociones disponibles en este momento.
                        <a href="/catalogo" class="alert-link">Explorar catálogo completo</a>
                    </div>
                </div>
            }
            else
            {
                <div class="mb-3">
                    <span class="badge bg-danger fs-6 px-3 py-2">
                        @offers.Count() producto@(offers.Count() != 1 ? "s" : "") en promoción
                    </span>
                </div>
                <ProductGrid Data="offers" />
            }
        </div>
    </div>
</div>

@code {
    [Inject] ProductService Products { get; set; } = default!;
    private IEnumerable<Product>? offers;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Usar el nuevo método específico para promociones
            offers = await Products.GetPromotionsAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"[Ofertas] Error al cargar promociones: {ex.Message}");
            offers = Enumerable.Empty<Product>();
        }
    }
}