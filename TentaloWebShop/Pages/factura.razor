@page "/factura/{InvoiceId}"
@inject InvoiceService InvoiceService
@inject AuthService Auth
@inject NavigationManager Nav
@using TentaloWebShop.Models

<PageTitle>Factura #@InvoiceId</PageTitle>

<div class="container-fluid">
    @if (isLoading)
    {
        <div class="text-center py-5">
            <div class="spinner-border text-success" role="status">
                <span class="visually-hidden">Cargando...</span>
            </div>
            <p class="mt-3 text-muted">Cargando factura...</p>
        </div>
    }
    else if (invoice == null)
    {
        <div class="empty-state">
            <div class="empty-icon">
                <i class="bi bi-exclamation-triangle"></i>
            </div>
            <h3>Factura no encontrada</h3>
            <p class="text-muted">La factura solicitada no existe o no tienes acceso a ella.</p>
            <a href="/facturas" class="btn btn-success">
                <i class="bi bi-arrow-left me-2"></i>
                Volver a Facturas
            </a>
        </div>
    }
    else
    {
        <!-- Header de la factura -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <nav aria-label="breadcrumb">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item"><a href="/facturas">Facturas</a></li>
                                <li class="breadcrumb-item active">Factura #@invoice.No</li>
                            </ol>
                        </nav>
                        <h1 class="mb-0">
                            <i class="bi bi-receipt me-2"></i>
                            Factura #@invoice.No
                        </h1>
                    </div>
                    <span class="status-badge-invoice status-large-invoice status-@GetStatusClass(invoice.Status)">
                        @GetStatusText(invoice.Status)
                    </span>
                </div>
            </div>
        </div>

        <div class="row g-4">
            <!-- Información de la factura -->
            <div class="col-12 col-lg-8">
                <!-- Cabecera de la factura -->
                <div class="card invoice-detail-card mb-4">
                    <div class="card-header invoice-detail-header">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-info-circle me-2"></i>
                            Información de la Factura
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row g-3">
                            <div class="col-md-6">
                                <div class="info-item">
                                    <div class="info-label">
                                        <i class="bi bi-calendar3"></i>
                                        <span>Fecha de Factura</span>
                                    </div>
                                    <div class="info-value">
                                        @(DateTime.TryParse(invoice.Order_Date, out var invoiceDate) ? invoiceDate.ToString("dd/MM/yyyy") : invoice.Order_Date)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="info-item">
                                    <div class="info-label">
                                        <i class="bi bi-calendar-check"></i>
                                        <span>Fecha de Contabilización</span>
                                    </div>
                                    <div class="info-value">
                                        @(DateTime.TryParse(invoice.Posting_Date, out var postingDate) ? postingDate.ToString("dd/MM/yyyy") : invoice.Posting_Date)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="info-item">
                                    <div class="info-label">
                                        <i class="bi bi-calendar-event"></i>
                                        <span>Fecha de Vencimiento</span>
                                    </div>
                                    <div class="info-value">
                                        @(DateTime.TryParse(invoice.Expected_Receipt_Date, out var dueDate) ? dueDate.ToString("dd/MM/yyyy") : invoice.Expected_Receipt_Date)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="info-item">
                                    <div class="info-label">
                                        <i class="bi bi-building"></i>
                                        <span>Cliente</span>
                                    </div>
                                    <div class="info-value">
                                        @invoice.Sell_to_Customer_Name
                                    </div>
                                </div>
                            </div>
                            <div class="col-12">
                                <div class="info-item">
                                    <div class="info-label">
                                        <i class="bi bi-geo-alt"></i>
                                        <span>Dirección de Facturación</span>
                                    </div>
                                    <div class="info-value">
                                        @invoice.Sell_to_Address<br />
                                        @invoice.Sell_to_County<br />
                                        @invoice.Sell_to_City, @invoice.Sell_to_Post_Code
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Líneas de la factura -->
                <div class="card invoice-detail-card">
                    <div class="card-header invoice-detail-header">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-list-ul me-2"></i>
                            Detalle de la Factura
                        </h5>
                    </div>
                    <div class="card-body p-0">
                        @if (GetInvoiceLines().Any())
                        {
                            <div class="table-responsive">
                                <table class="table table-hover invoice-lines-table">
                                    <thead>
                                        <tr>
                                            <th>Artículo</th>
                                            <th>Descripción</th>
                                            <th class="text-center">Cantidad</th>
                                            <th class="text-end">Precio Unit.</th>
                                            <th class="text-end">IVA %</th>
                                            <th class="text-end">Descuento</th>
                                            <th class="text-end">Total</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var line in GetInvoiceLines())
                                        {
                                            <tr>
                                                <td>
                                                    <strong>@line.No</strong>
                                                </td>
                                                <td>
                                                    <div class="line-description">
                                                        @line.Description
                                                        @if (!string.IsNullOrEmpty(line.Unit_of_Measure))
                                                        {
                                                            <small class="text-muted d-block">Unidad: @line.Unit_of_Measure</small>
                                                        }
                                                    </div>
                                                </td>
                                                <td class="text-center">
                                                    <span class="quantity-badge-invoice">@line.Quantity</span>
                                                </td>
                                                <td class="text-end">@line.Unit_Price.ToString("N2") €</td>
                                                <td class="text-end">
                                                    <span class="vat-badge">@line.VAT_Percent.ToString("N0")%</span>
                                                </td>
                                                <td class="text-end">
                                                    @if (line.Line_Discount_Percent > 0)
                                                    {
                                                        <span class="text-success">@line.Line_Discount_Percent.ToString("N1")%</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="text-muted">-</span>
                                                    }
                                                </td>
                                                <td class="text-end">
                                                    <strong>@line.Amount.ToString("N2") €</strong>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="p-4 text-center text-muted">
                                <i class="bi bi-inbox display-6"></i>
                                <p class="mt-2">No hay líneas de factura disponibles</p>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Resumen y acciones -->
            <div class="col-12 col-lg-4">
                <div class="card invoice-detail-card">
                    <div class="card-header invoice-detail-header">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-calculator me-2"></i>
                            Resumen de la Factura
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="invoice-summary">
                            <div class="summary-row">
                                <span>Base Imponible:</span>
                                <span>@invoice.Amount.ToString("N2") €</span>
                            </div>
                            <div class="summary-row">
                                <span>IVA:</span>
                                <span>@invoice.VAT_Amount.ToString("N2") €</span>
                            </div>
                            @if (invoice.VAT_Base_Discount_Percent > 0)
                            {
                                <div class="summary-row discount">
                                    <span>Descuento (@invoice.VAT_Base_Discount_Percent.ToString("N1")%):</span>
                                    <span>-@((invoice.Amount * invoice.VAT_Base_Discount_Percent / 100).ToString("N2")) €</span>
                                </div>
                            }
                            <hr />
                            <div class="summary-row total-invoice">
                                <span>Total a Pagar:</span>
                                <span>@invoice.Amount_Including_VAT.ToString("N2") €</span>
                            </div>
                        </div>

                        <div class="invoice-actions mt-4">
                            <button class="btn btn-success w-100 mb-2" @onclick="DownloadInvoice">
                                <i class="bi bi-download me-2"></i>
                                Descargar PDF
                            </button>

                            @if (invoice.Status?.ToLower() != "paid")
                            {
                                <button class="btn btn-outline-success w-100 mb-2" @onclick="PayInvoice">
                                    <i class="bi bi-credit-card me-2"></i>
                                    Pagar Factura
                                </button>

                                @if (IsOverdue())
                                {
                                    <div class="alert alert-warning mt-3">
                                        <i class="bi bi-exclamation-triangle me-2"></i>
                                        <strong>Factura Vencida</strong><br />
                                        Esta factura está vencida. Por favor, procedan al pago.
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="alert alert-success mt-3">
                                    <i class="bi bi-check-circle me-2"></i>
                                    <strong>Factura Pagada</strong><br />
                                    Esta factura ya ha sido abonada.
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <!-- Información adicional -->
                @if (!string.IsNullOrEmpty(invoice.Usuario_App))
                {
                    <div class="card invoice-detail-card mt-4">
                        <div class="card-header invoice-detail-header">
                            <h6 class="card-title mb-0">
                                <i class="bi bi-person me-2"></i>
                                Información Adicional
                            </h6>
                        </div>
                        <div class="card-body">
                            <div class="info-item">
                                <div class="info-label">
                                    <i class="bi bi-person-circle"></i>
                                    <span>Usuario</span>
                                </div>
                                <div class="info-value">@invoice.Usuario_App</div>
                            </div>
                            @if (!string.IsNullOrEmpty(invoice.Location_Code))
                            {
                                <div class="info-item">
                                    <div class="info-label">
                                        <i class="bi bi-building"></i>
                                        <span>Almacén</span>
                                    </div>
                                    <div class="info-value">@invoice.Location_Code</div>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    }
</div>

@code {
    [Parameter] public string InvoiceId { get; set; } = "";

    private OrderNAVCabecera? invoice;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadInvoice();
    }

    private async Task LoadInvoice()
    {
        isLoading = true;
        try
        {
            var customerNo = Auth.CurrentUser?.CustomerNo ?? "";
            if (string.IsNullOrEmpty(customerNo))
            {
                Nav.NavigateTo("/login");
                return;
            }

            invoice = await InvoiceService.GetOrderByIdAsync(InvoiceId, customerNo);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading invoice: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private List<OrderNAVLineas> GetInvoiceLines()
    {
        if (invoice == null) return new List<OrderNAVLineas>();

        return invoice.LineasFactura?.ToList() ??
               invoice.Lines?.ToList() ??
               invoice.LineasVenta?.ToList() ??
               invoice.Lineas?.ToList() ??
               new List<OrderNAVLineas>();
    }

    private async Task DownloadInvoice()
    {
        Console.WriteLine($"Descargando factura PDF: {InvoiceId}");
        // Implementar descarga de PDF
    }

    private async Task PayInvoice()
    {
        Console.WriteLine($"Iniciando pago para factura: {InvoiceId}");
        // Implementar proceso de pago
    }

    private bool IsOverdue()
    {
        if (DateTime.TryParse(invoice?.Expected_Receipt_Date, out var dueDate))
        {
            return dueDate < DateTime.Now && invoice?.Status?.ToLower() != "paid";
        }
        return false;
    }

    private string GetStatusClass(string status)
    {
        return status?.ToLower() switch
        {
            "open" => "pending",
            "released" => "released",
            "paid" => "paid",
            "cancelled" => "cancelled",
            "overdue" => "overdue",
            _ => "unknown"
        };
    }

    private string GetStatusText(string status)
    {
        return status?.ToLower() switch
        {
            "open" => "Abierta",
            "released" => "Liberada",
            "paid" => "Pagada",
            "cancelled" => "Cancelada",
            "overdue" => "Vencida",
            _ => status ?? "Desconocido"
        };
    }
}