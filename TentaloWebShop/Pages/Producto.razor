@page "/producto/{slug}"
@inject ProductService Products
@inject CartService Cart
@inject CategoryService Categories
@inject AuthService Auth
@if (product is null)
{
    <div class="p-5 text-center">
        <div class="spinner-border text-danger" role="status">
            <span class="visually-hidden">Cargando...</span>
        </div>
    </div>
}
else
{
    var fam = Categories.GetFamily(product.FamilySlug);
    var sub = Categories.GetSub(product.FamilySlug, product.SubfamilySlug);
    var hasStock = product.inventario100 > 0;

    <Breadcrumbs Crumbs="@(new List<(string,string,bool)>
                                           {
                                               ("Catálogo","/catalogo",false),
                                               (fam?.Name ?? "Familia",$"/categoria/{fam?.Slug}", false),
                                               (sub?.Name ?? "Subfamilia",$"/categoria/{fam?.Slug}/{sub?.Slug}", true)
                                           })" />

<div class="row g-4">
    <!-- Imagen del Producto -->
    <div class="col-12 col-md-5">
        <div class="product-image-wrapper @(!hasStock ? "out-of-stock" : "")">
            <img class="img-fluid rounded border product-detail-image"
                 src="@product.ImageUrl"
                 alt="@product.Name"
                 onerror="this.src='/images/placeholder.png'">

                <!-- Badge de disponibilidad -->
            @if (hasStock)
                {
                    <div class="stock-badge-detail available">
                        <i class="bi bi-check-circle-fill"></i> Disponible
                    </div>
                }
                else
                {
                    <div class="stock-badge-detail unavailable">
                        <i class="bi bi-x-circle-fill"></i> No disponible temporalmente
                    </div>
                }
            </div>
        </div>

        <!-- Información del Producto -->
        <div class="col-12 col-md-7">
            <h1>@product.Name</h1>
            <div class="mb-2 d-flex align-items-baseline gap-2">
                <span class="price h4 mb-0">@product.PriceFrom.ToString("N2", CultureInfo.GetCultureInfo("es-ES")) €</span>
                <span class="price-single">x</span>
                <span class="price-single">@product.Presentation_Unit</span>
            </div>

            @if (!hasStock)
            {
                <div class="alert alert-warning d-flex align-items-center mt-3" role="alert">
                    <i class="bi bi-exclamation-triangle-fill me-2"></i>
                    <div>
                        <strong>Producto no disponible temporalmente.</strong> Este producto está agotado en este momento.
                    </div>
                </div>
            }

            @* ⬇️⬇️⬇️ CAMBIO CRÍTICO AQUÍ - Cambiado de d-flex a product-actions-container ⬇️⬇️⬇️ *@
            <div class="product-actions-container my-3">
                <QuantityStepper Value="qty"
                                 ValueChanged="v => qty = v"
                                 Disabled="@(!hasStock)" />
                <button class="btn btn-danger btn-add-cart"
                        @onclick="Add"
                        disabled="@(!hasStock)">
                    <i class="bi @(hasStock ? "bi-cart-plus" : "bi-cart-x") me-2"></i>
                    @(hasStock ? "Añadir al Carrito" : "No Disponible")
                </button>
            </div>
            @if (Auth.CurrentUser?.Tipo == "Sales Team" && product != null)
            {
                <div class="inventory-section">
                    <!-- INVENTARIO 100 -->
                    <div class="inventory-info">
                        <h6>Almacén 001</h6>
                        <p class="inventory-value">
                            @if (product.inventario100 > 0)
                            {
                                <span class="badge bg-success">@product.inventario100 unidades</span>
                            }
                            else
                            {
                                <span class="badge bg-danger">Sin stock</span>
                            }
                        </p>
                    </div>

                    <!-- INVENTARIO NO 100 -->
                    <div class="inventory-info">
                        <h6>Resto Almacenes</h6>
                        <p class="inventory-value">
                            @if (product.inventarioNo100 > 0)
                            {
                                <span class="badge bg-info">@product.inventarioNo100 unidades</span>
                            }
                            else
                            {
                                <span class="badge bg-warning">Sin stock</span>
                            }
                        </p>
                    </div>

                    <!-- LOTES -->
                    @if (productStocks.Any())
                    {
                        <div class="lotes-section">
                            <h6>Lotes Disponibles</h6>
                            <table class="table table-sm">
                                <thead>
                                    <tr>
                                        <th>Lote</th>
                                        <th>Caducidad</th>
                                        <th>Cantidad</th>
                                      
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var lote in productStocks)
                                    {
                                        <tr>
                                            <td>@lote.lotNo</td>
                                            <td>
                                                @if (lote.expirationDate != DateTime.MinValue)
                                                {
                                                    <span class="@(lote.expirationDate < DateTime.Now ? "text-danger" : "text-success")">
                                                        @lote.expirationDate.ToString("dd/MM/yyyy")
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">S/D</span>
                                                }
                                            </td>
                                            <td>@lote.remainingQuantity</td>
                                            <td>@lote.No</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else if (!loadingStock && productStocks.Count == 0)
                    {
                        <div class="alert alert-warning">
                            <i class="bi bi-exclamation-triangle"></i>
                            No hay lotes disponibles para este producto
                        </div>
                    }
                </div>
            }
            <!-- Características destacadas -->
         
        </div>
    </div>

    <!-- Tabs de Descripción/Ingredientes/Modo de Uso -->
    <div class="row mt-5">
        <div class="col-12">
            <ul class="nav nav-tabs product-tabs" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link @(activeTab == "description" ? "active" : "")"
                            @onclick="@(() => activeTab = "description")"
                            type="button"
                            role="tab">
                        <i class="bi bi-file-text me-2"></i>
                        Descripción
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link @(activeTab == "ingredients" ? "active" : "")"
                            @onclick="@(() => activeTab = "ingredients")"
                            type="button"
                            role="tab">
                        <i class="bi bi-list-check me-2"></i>
                        Ingredientes
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link @(activeTab == "usage" ? "active" : "")"
                            @onclick="@(() => activeTab = "usage")"
                            type="button"
                            role="tab">
                        <i class="bi bi-info-circle me-2"></i>
                        Modo de Uso
                    </button>
                </li>
            </ul>

            <div class="tab-content product-tab-content">
                @if (activeTab == "description")
                {
                    <div class="tab-pane-custom active">
                        <div class="content-card">
                            <h3 class="content-title">
                                <i class="bi bi-file-text text-primary me-2"></i>
                                Descripción del Producto
                            </h3>
                            <p class="content-text">
                                @(string.IsNullOrWhiteSpace(product.DescProducto) ? "Sin descripción disponible" : product.DescProducto)
                            </p>
                        </div>
                    </div>
                }
                else if (activeTab == "ingredients")
                {
                    <div class="tab-pane-custom active">
                        <div class="content-card">
                            <h3 class="content-title">
                                <i class="bi bi-list-check text-success me-2"></i>
                                Composición e Ingredientes
                            </h3>
                            <div class="ingredients-content">
                                <p class="content-text">
                                    @(string.IsNullOrWhiteSpace(product.Description) ? "Sin información de ingredientes disponible" : product.Description)
                                </p>
                                <div class="alert alert-info mt-3 d-flex align-items-start">
                                    <i class="bi bi-info-circle me-2 mt-1"></i>
                                    <div>
                                        <strong>Importante:</strong> Consulte la etiqueta del producto para información nutricional detallada y alérgenos.
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                else if (activeTab == "usage")
                {
                    <div class="tab-pane-custom active">
                        <div class="content-card">
                            <h3 class="content-title">
                                <i class="bi bi-info-circle text-warning me-2"></i>
                                Modo de Uso y Recomendaciones
                            </h3>
                            <div class="usage-content">
                                <div class="usage-section">
                                    <h5><i class="bi bi-clock me-2"></i>Dosis Recomendada</h5>
                                    <p>Consulte las instrucciones específicas en el envase del producto para la dosis adecuada según sus objetivos deportivos.</p>
                                </div>
                                <div class="usage-section">
                                    <h5><i class="bi bi-droplet me-2"></i>Preparación</h5>
                                    <p>Mezcle la cantidad recomendada con agua o su bebida favorita. Agite bien hasta que esté completamente disuelto.</p>
                                </div>
                                <div class="usage-section">
                                    <h5><i class="bi bi-exclamation-triangle me-2"></i>Advertencias</h5>
                                    <p>No superar la dosis diaria recomendada. Los complementos alimenticios no deben utilizarse como sustituto de una dieta equilibrada. Mantener fuera del alcance de los niños.</p>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}

<style>
    /* ========================================
               IMAGEN DEL PRODUCTO CON INVENTARIO
               ======================================== */

    .product-image-wrapper {
        position: relative;
        transition: all 0.3s ease;
    }

        .product-image-wrapper.out-of-stock .product-detail-image {
            filter: grayscale(100%) brightness(1.15);
            opacity: 0.6;
        }

    .product-detail-image {
        transition: all 0.3s ease;
    }

    /* ========================================
               BADGE DE DISPONIBILIDAD EN DETALLE
               ======================================== */

    .stock-badge-detail {
        position: absolute;
        top: 15px;
        left: 15px;
        padding: 10px 18px;
        border-radius: 25px;
        font-size: 0.9rem;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 8px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.25);
        z-index: 2;
        animation: badgePulse 2s ease-in-out infinite;
    }

    @@keyframes badgePulse {
        0%, 100% {
            transform: scale(1);
        }

        50% {
            transform: scale(1.05);
        }
    }

    .stock-badge-detail.available {
        background: linear-gradient(135deg, #28a745, #20c997);
        color: white;
    }

    .stock-badge-detail.unavailable {
        background: linear-gradient(135deg, #dc3545, #c82333);
        color: white;
    }

    .stock-badge-detail i {
        font-size: 1.1rem;
    }

    /* ========================================
               CARACTERÍSTICAS DESTACADAS
               ======================================== */

    .product-features {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
        padding: 1rem;
        background: linear-gradient(135deg, #f8f9fa, #e9ecef);
        border-radius: 8px;
        border: 1px solid #dee2e6;
    }

    .feature-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: #495057;
        font-size: 0.9rem;
        font-weight: 500;
    }

        .feature-item i {
            color: #dc3545;
            font-size: 1.25rem;
        }

    /* ========================================
               TABS DE PRODUCTO
               ======================================== */

    .product-tabs {
        border-bottom: 2px solid #e9ecef;
        gap: 0.5rem;
    }

        .product-tabs .nav-link {
            border: none;
            background: transparent;
            color: #6c757d;
            font-weight: 600;
            padding: 0.875rem 1.25rem;
            border-radius: 8px 8px 0 0;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
        }

            .product-tabs .nav-link:hover {
                color: #495057;
                background: #f8f9fa;
            }

            .product-tabs .nav-link.active {
                color: #dc3545;
                background: white;
                border-bottom: 3px solid #dc3545;
                margin-bottom: -2px;
            }

    .product-tab-content {
        padding: 2rem 0;
    }

    .tab-pane-custom {
        animation: fadeInTab 0.3s ease;
    }

    @@keyframes fadeInTab {
        from {
            opacity: 0;
            transform: translateY(10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    /* ========================================
               CONTENIDO DE TABS
               ======================================== */

    .content-card {
        background: white;
        border-radius: 12px;
        padding: 2rem;
        box-shadow: 0 2px 12px rgba(0, 0, 0, 0.06);
        border: 1px solid #e9ecef;
    }

    .content-title {
        font-size: 1.5rem;
        font-weight: 700;
        color: #212529;
        margin-bottom: 1.5rem;
        display: flex;
        align-items: center;
    }

    .content-text {
        font-size: 1rem;
        line-height: 1.8;
        color: #495057;
        margin-bottom: 0;
    }

    .ingredients-content {
        margin-top: 1rem;
    }

    .usage-content {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }

    .usage-section h5 {
        color: #212529;
        font-weight: 700;
        margin-bottom: 0.75rem;
        display: flex;
        align-items: center;
    }

    .usage-section p {
        color: #6c757d;
        line-height: 1.6;
        margin-bottom: 0;
    }

    /* ========================================
               RESPONSIVE - TABLET
               ======================================== */

    @@media (max-width: 991.98px) {
        .stock-badge-detail {
            padding: 8px 14px;
            font-size: 0.8rem;
        }

            .stock-badge-detail i {
                font-size: 1rem;
            }

        .product-features {
            gap: 0.75rem;
        }

        .feature-item {
            font-size: 0.85rem;
        }

            .feature-item i {
                font-size: 1.1rem;
            }

        .product-tabs .nav-link {
            padding: 0.75rem 1rem;
            font-size: 0.9rem;
        }

        .content-card {
            padding: 1.5rem;
        }

        .content-title {
            font-size: 1.25rem;
        }
    }

    /* ========================================
               RESPONSIVE - MOBILE
               ======================================== */

    @@media (max-width: 767.98px) {
        .stock-badge-detail {
            top: 10px;
            left: 10px;
            padding: 6px 12px;
            font-size: 0.75rem;
            gap: 6px;
        }

            .stock-badge-detail i {
                font-size: 0.9rem;
            }

        .product-features {
            padding: 0.75rem;
            gap: 0.5rem;
        }

        .feature-item {
            font-size: 0.8rem;
        }

            .feature-item i {
                font-size: 1rem;
            }

        .product-tabs {
            flex-wrap: nowrap;
            overflow-x: auto;
            -webkit-overflow-scrolling: touch;
        }

            .product-tabs .nav-link {
                padding: 0.625rem 0.875rem;
                font-size: 0.85rem;
                white-space: nowrap;
            }

        .product-tab-content {
            padding: 1.5rem 0;
        }

        .content-card {
            padding: 1.25rem;
        }

        .content-title {
            font-size: 1.125rem;
            margin-bottom: 1rem;
        }

        .content-text {
            font-size: 0.9rem;
        }
    }

    @@media (max-width: 375px) {
        .stock-badge-detail {
            font-size: 0.7rem;
            padding: 5px 10px;
        }
    }
</style>

@code {
    [Parameter] public string slug { get; set; } = string.Empty;
    private Product? product;
    private int qty = 1;
    private string activeTab = "description";
    private List<Stock> productStocks = new List<Stock>();
    private bool loadingStock = false;

    protected override async Task OnParametersSetAsync()
    {
        product = (await Products.GetAllAsync()).FirstOrDefault(p => p.Slug == slug);
        if (Auth.CurrentUser?.Tipo == "Sales Team" && !string.IsNullOrEmpty(product.Itemno))
        {
            loadingStock = true;
            productStocks = await Products.GetStockByProductoAsync("001", product.Itemno);
            loadingStock = false;
        }
    }

    private async Task Add()
    {
        if (product is not null && qty >= 1 && product.inventario100 > 0)
        {
            await Cart.Add(product, qty);
        }
    }
     
}