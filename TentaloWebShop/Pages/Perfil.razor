@page "/perfil"
@inject AuthService Auth
@using System.Globalization

@if (!Auth.IsAuthenticated)
{
    <div class="alert alert-warning">Debes iniciar sesión para ver tu perfil.</div>
}
else
{
    <h1 class="mb-4">Mi Perfil</h1>

    <div class="card shadow-sm">
        <div class="card-body">
            <div class="row g-4">
                <!-- Datos de identidad y dirección -->
                <div class="col-12 col-lg-7">
                    <div class="mb-2 text-muted">Cliente</div>
                    <div class="fs-5 fw-bold">@Auth.CurrentUser?.FullName</div>

                    <div class="mt-3 text-muted">CIF/NIF</div>
                    <div class="fw-semibold">@Auth.CurrentCustomer?.vatRegistrationNo</div>

                    <div class="mt-3 text-muted">Dirección</div>
                    <address class="mb-0">
                        @Auth.CurrentCustomer?.Address<br />
                        @Auth.CurrentCustomer?.County<br />
                        @Auth.CurrentCustomer?.City<br />
                        @Auth.CurrentCustomer?.PostCode
                    </address>

                    <div class="mt-3 text-muted">Usuario (email)</div>
                    <div>@Auth.CurrentUser?.Email</div>
                </div>

                <!-- Bloque económico -->
                <div class="col-12 col-lg-5">
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item d-flex justify-content-between">
                            <span>Saldo</span>
                            <strong>@Eur(Auth.CurrentCustomer?.netChange)</strong>
                        </li>
                        <li class="list-group-item d-flex justify-content-between">
                            <span>Saldo vencido</span>
                            <strong>@Eur(Auth.CurrentCustomer?.balanceDue)</strong>
                        </li>
                        <li class="list-group-item d-flex justify-content-between">
                            <span>Límite de crédito</span>
                            <strong>@Eur(Auth.CurrentCustomer?.creditLimitLCY)</strong>
                        </li>
                        <li class="list-group-item d-flex justify-content-between">
                            <span>Descuento</span>
                            <strong>@Pct(Auth.CurrentCustomer?.Desgeneral)</strong>
                        </li>
                        <li class="list-group-item d-flex justify-content-between">
                            <span>Descuento PP</span>
                            <strong>@Pct(Auth.CurrentCustomer?.DescPP)</strong>
                        </li>
                    </ul>
                </div>
            </div>
            <SfChart3D>
                <Chart3DPrimaryXAxis ValueType="Syncfusion.Blazor.Chart3D.ValueType.Category"></Chart3DPrimaryXAxis>
                <Chart3DSeriesCollection>
                    <Chart3DSeries DataSource="@Sales" XName="Month" YName="SalesValue" Type="Chart3DSeriesType.Column">
                    </Chart3DSeries>
                </Chart3DSeriesCollection>
            </SfChart3D>
        </div>
    </div>
}

@code {
    private static readonly CultureInfo es = CultureInfo.GetCultureInfo("es-ES");

    // € — decimal?
    private string Eur(decimal? v) => (v ?? 0m).ToString("C", es);
    // € — double?
    private string Eur(double? v) => Eur(v.HasValue ? (decimal?)v.Value : null);

    // % — decimal?
    private string Pct(decimal? v)
    {
        var d = v ?? 0m;
        if (d > 1m) d /= 100m;      // 10 => 10%
        return d.ToString("P2", es);
    }
    // % — double?
    private string Pct(double? v) => Pct(v.HasValue ? (decimal?)v.Value : null);

    public class SalesInfo
    {
        public string Month { get; set; }
        public double SalesValue { get; set; }
    }
    public List<SalesInfo> Sales = new List<SalesInfo>
    {
        new SalesInfo { Month = "Jan", SalesValue = 35 },
        new SalesInfo { Month = "Feb", SalesValue = 28 },
        new SalesInfo { Month = "Mar", SalesValue = 34 },
        new SalesInfo { Month = "Apr", SalesValue = 32 },
        new SalesInfo { Month = "May", SalesValue = 40 },
        new SalesInfo { Month = "Jun", SalesValue = 32 },
        new SalesInfo { Month = "Jul", SalesValue = 35 }
    };
}

