@inject CartService Cart
@inject NavigationManager Nav

<div class="card product-card h-100">
    <div class="product-media" @onclick="Open" role="button" tabindex="0">
        <div class="image-container">
            <img src="@(!string.IsNullOrWhiteSpace(Product.ImageUrl) ? Product.ImageUrl : "/images/image.png")"
                 alt="@Product.Name"
                 loading="lazy"
                 onerror="this.src='/images/image.png';" />
            <div class="image-overlay">
                <i class="bi bi-eye"></i>
            </div>
        </div>

        @if (Product.Tags.Any())
        {
            <div class="product-badges">
                @foreach (var tag in Product.Tags.Take(2))
                {
                    <span class="badge product-badge">@tag</span>
                }
            </div>
        }
    </div>

    <div class="card-body d-flex flex-column">
        <h6 class="product-title" @onclick="Open" role="button" tabindex="0">
            @Product.Name
        </h6>

        <div class="product-price mb-3">
            <span class="price-single">@Product.PriceFrom.ToString("N2", es) €</span>
            <span class="price-single">x</span>
            <span class="price-single">@Product.Presentation_Unit</span>
        </div>

        <div class="mt-auto">
            @* CONTADOR Y CARRITO AL 50% CADA UNO *@
            <div class="product-actions-row">
                @* Contador - 50% *@
                <div class="counter-wrapper">
                    <QuantityStepper Value="qty" ValueChanged="(v) => qty = v" />
                </div>

                @* Botón Carrito - 50% *@
                <button class="btn-cart-full @(isAdding ? "adding" : "")"
                        @onclick="AddToCart"
                        type="button"
                        disabled="@(Product.PriceFrom <= 0 || isAdding)"
                        title="Añadir al carrito">
                    @if (isAdding)
                    {
                        <span class="spinner-border spinner-border-sm"></span>
                    }
                    else
                    {
                        <i class="bi bi-cart-plus"></i>
                    }
                </button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public Product Product { get; set; } = null!;
    private int qty = 1;
    private bool isAdding;
    private System.Globalization.CultureInfo es = System.Globalization.CultureInfo.GetCultureInfo("es-ES");

    private void Open() => Nav.NavigateTo($"/producto/{Product.Slug}");

    private async Task AddToCart()
    {
        if (isAdding || Product.PriceFrom <= 0) return;

        isAdding = true;
        try
        {
            await Cart.Add(Product, qty);
            await Task.Delay(300);
        }
        finally
        {
            isAdding = false;
        }
    }
}